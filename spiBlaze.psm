counter_low 	equ		s0;
counter_mid	equ		s1;
counter_high 	equ		s2;

var_out		equ		s3;

shift_out	equ		s4;
shift_counter	equ		s5;

mosi_port	equ		0x00;
csN_port	equ		0x01;
dclk_port	equ		0x03;

readX		equ		0x93;
readY		equ		0xd3;

	load	var_out,	0x01;
	out	var_out,	csN_port;	Set csN high

	load	shift_out,	readX;		set to do an X read
read:
	load 	shift_counter,	0xf8; 		Counter to count 8 bits
	load	var_out,	0x00;
	out	var_out,	dclk_port;	Set dclk low
	out	var_out,	csN_port;	Set csN low
shift:
	load	var_out,	0x00;
	out	var_out,	dclk_port;	set dclk low
	load	var_out,	0x01;
	and 	var_out,	shift_out;
	out	var_out,	mosi_port;	set MOSI bit
	sr0	shift_out;			shift MOSI register	
	call	delay;				wait half period
	load 	var_out,	0x01;		
	out	var_out,	dclk_port;	set dclk high
	call 	delay;
	add	shift_counter,	0x01;
	jump	NC,		shift;
	load	var_out,	0x00;
	out	var_out,	dclk_port;	set dclk low
	
	; CODE FOR BUSY AND MISO HERE!
	
	load	var_out,	0x01;
	out	var_out,	csN_port;	Set csN high
	jump	end;
	
delay:
	load	counter_low,	0x00;
	load	counter_mid,	0x00;
	load	counter_high,	0x00;
delay_inner:
	add 	counter_low,	0xff;		SHOULD be 0x01 @ 125MHz
	jump 	NC,		delay_inner;
	add	counter_mid,	0x41;		SHOULD be 0x01 @ 125MHz
	jump 	NC,		delay_inner;
	add	counter_high,	0x01;
	test	counter_high,	0x02; 
	jump 	NC,		delay_inner;
	ret;
	
	
end:
